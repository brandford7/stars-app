{"version":3,"sources":["logo.svg","Components/Reviews.js","App.js","reportWebVitals.js","index.js"],"names":["data","Reviews","useState","color","reviews","setReviews","rating","ratings","setRatings","stars","Array","map","star","index","ratingValue","type","value","onClick","className","size","review","id","title","newReview","filter","console","log","handleRemove","style","backgroundColor","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2MAAe,I,iCCGTA,EAAO,CACb,CACI,GAAO,uCACP,MAAU,gBACd,MAAU,UAEV,OAAW,KAGX,CACC,GAAO,uCACJ,MAAU,OACd,MAAU,UAEV,OAAW,KAGX,CACC,GAAO,uCACJ,MAAU,eACd,MAAU,UAEV,OAAW,KAKX,CACC,GAAO,uCACJ,MAAU,aACd,MAAU,UAEV,OAAW,MA4EIC,EApEC,WAEZ,IACA,EAAwBC,mBADH,CAACC,MAAO,KAC7B,mBACD,GADC,UAC2BD,mBAASF,IAArC,mBAAMI,EAAN,KAAcC,EAAd,KACA,EAA4BH,mBAASF,EAAKM,QAA1C,mBAAMC,EAAN,KAAcC,EAAd,KAcKC,EAAQ,YAAIC,MAAM,IAAIC,KAAI,SAACC,EAAMC,GACR,IAAMC,EAAcD,EAAO,EAE3B,OACA,kCACA,uBAAOE,KAAO,QAAUC,MAAOF,EAAaG,QAAS,kBAAMT,EAAWM,MACtE,cAAC,IAAD,CAAgBI,UAAY,OAAOC,KAAO,GAAIhB,MAAOW,GAAeP,EAAU,SAAS,gBAGpH,OACI,qCACK,yCACF,8BACEH,EAAQO,KAAI,SAACS,GACX,IAAOC,EAAyBD,EAAzBC,GAAGC,EAAsBF,EAAtBE,MAAMnB,EAAgBiB,EAAhBjB,MAAgBiB,EAAVd,OACtB,OACC,8BACI,6BACI,+BACL,6BAAKgB,IAEN,8BACI,wBAAQL,QAAU,kBA7BjB,SAACI,GAEpB,IAAME,EAAYnB,EAAQoB,QAAO,SAACJ,GAAD,OAAYA,EAAOC,KAAOA,KAC3DI,QAAQC,IAAI,SACZrB,EAAYkB,GAyB4BI,CAAaN,IAAnC,iBAGC,oCACT,qBAAIO,MAAO,CAACC,gBAAiB1B,EAAOA,MAAOA,GAA3C,cAAqDA,EAArD,OAEe,kCAEIM,OAMd,6BAAKF,QAnBKc,cCnEdS,MARf,WACE,OACE,mCACA,cAAC,EAAD,OCKWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.269949a5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React,{useState} from 'react'\r\nimport {BsFillStarFill}from 'react-icons/bs';\r\n\r\nconst data = [\r\n{\r\n    \"id\" : \"0175d1f0-a8c6-41bf-8d02-df5734d829a4\" ,\r\n    \"title\" : \"ocean at dusk\" ,\r\n\"color\" : \"#00c4e2\" ,\r\n\r\n\"rating\" : \"5\" ,\r\n},\r\n\r\n{\r\n \"id\" : \"83c7ba2f-7392-4d7d-9e23-35adbe186046\" ,\r\n    \"title\" : \"lawn\" ,\r\n\"color\" : \"#26ac56\" ,\r\n\r\n\"rating\" : \"3\" ,\r\n},\r\n\r\n{\r\n \"id\" : \"a11e3995-code-4d58-8c48-5e49ae7f7f23\" ,\r\n    \"title\" : \"bright green\" ,\r\n\"color\" : \"#22ca15\" ,\r\n\r\n\"rating\" : \"4\" ,\r\n\r\n\r\n},\r\n\r\n{\r\n \"id\" : \"a11e3995-bobd-4d58-8c48-5e49ae7f7f23\" ,\r\n    \"title\" : \"bright red\" ,\r\n\"color\" : \"#ff0000\" ,\r\n\r\n\"rating\" : \"0\" ,\r\n\r\n\r\n},\r\n\r\n\r\n]\r\n\r\nconst Reviews = () => {\r\n   \r\n    const initialstate = {color: \"\"}\r\n    const[color,setColor] = useState(initialstate)\r\n   const[reviews,setReviews] = useState(data) \r\n   const[ratings,setRatings] = useState(data.rating)\r\n   \r\n   const handleClick = () => {\r\n\r\n      setColor( <button style={{color: 'yellow'}} />)\r\n  }\r\n\r\n  const handleRemove = (id) => {\r\n    \r\n    const newReview = reviews.filter((review) => review.id !== id)\r\n    console.log('hello')\r\n    setReviews( newReview)\r\n  }\r\n\r\n  const stars = [...Array(5)].map((star, index)=>{\r\n                                 const ratingValue = index +1\r\n                                \r\n                                 return (\r\n                                 <label>\r\n                                 <input type = 'radio'   value={ratingValue} onClick={() => setRatings(ratingValue)} />\r\n                                 <BsFillStarFill className = 'star' size= {70} color={ratingValue <= ratings ? 'yellow':'black'} />\r\n                         </label>\r\n                        )}) \r\n    return (\r\n        <>\r\n             <h1>Ratings</h1>   \r\n           <div >\r\n            {reviews.map((review) => {\r\n               const {id,title,color,rating} = review\r\n               return (\r\n                <div > \r\n                    <ul key={id}>\r\n                        <li>\r\n                   <h4>{title}</h4>\r\n                  \r\n                  <div> \r\n                      <button onClick ={()=>handleRemove(id)}>x</button>\r\n                  </div>\r\n                      \r\n                       <section > \r\n              <h2 style={{backgroundColor: color, color: color}}> {color} </h2>\r\n                             \r\n                             <section>\r\n                                 \r\n                                {stars }\r\n                                 </section>\r\n                             \r\n                             </section>\r\n                  \r\n            \r\n                   <h4>{ratings}</h4>\r\n                   </li>\r\n                       </ul>\r\n                     </div> \r\n                \r\n                    )\r\n            })}\r\n         </div>\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Reviews","import logo from './logo.svg';\nimport './App.css';\nimport Reviews from './Components/Reviews';\n\nfunction App() {\n  return (\n    <>\n    <Reviews/>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}