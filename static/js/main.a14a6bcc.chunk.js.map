{"version":3,"sources":["logo.svg","Components/Stars.js","Components/Reviews.js","Components/Context.js","App.js","reportWebVitals.js","index.js"],"names":["Stars","data","useState","rating","ratings","setRatings","hover","setHover","Array","map","star","index","ratingValue","type","value","onClick","onMouseEnter","onMouseLeave","className","size","color","Reviews","reviews","setReviews","style","flex","alignItems","review","id","title","newReview","filter","console","log","handleRemove","backgroundColor","React","createContext","Provider","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2MAAe,I,iCCIFA,EAAQ,SAACC,GACpB,MAA8BC,mBAASD,EAAKE,QAA5C,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAwBH,qBAAxB,mBAEA,GAFA,UAE0BA,oBAAS,IAAnC,mBAAOI,EAAP,KAAcC,EAAd,KAIA,OACE,gCACW,YAAIC,MAAM,IAAIC,KAAI,SAACC,EAAMC,EAAOV,GAC3B,IAAMW,EAAcD,EAAQ,EAE5B,OACM,kCACd,uBACEE,KAAK,QACLC,MAAOF,EACPG,QAAS,kBAAMV,EAAWO,IAC1BI,aAAc,kBAAMT,GAAUD,IAC9BW,aAAc,kBAAMV,EAASD,MAG/B,cAAC,IAAD,CACEY,UAAU,OACVC,KAAM,GACNC,MAAOR,GAAeR,EAAU,SAAW,UAE5CE,GAAS,sDAdgBK,MAkBhC,6BAAKP,QChCEH,EAAO,CACpB,CACI,GAAO,uCACP,MAAU,gBACd,MAAU,UAEV,OAAW,KAGX,CACC,GAAO,uCACJ,MAAU,OACd,MAAU,UAEV,OAAW,KAGX,CACC,GAAO,uCACJ,MAAU,eACd,MAAU,UAEV,OAAW,KAKX,CACC,GAAO,uCACJ,MAAU,aACd,MAAU,UAEV,OAAW,MAqEIoB,EA3DC,WAIb,MAA4BnB,mBAASD,GAArC,mBAAMqB,EAAN,KAAcC,EAAd,KACA,EAA4BrB,mBAASD,EAAKE,QAA1C,mBAAMC,EAAN,KACA,GADA,KACwBF,mBAASD,EAAKmB,QAAtC,6BAYC,OACI,qCAEK,oBAAII,MAAO,CAACC,KAAK,EAAGC,WAAW,UAA/B,qBACF,8BACEJ,EAAQb,KAAI,SAACkB,GACX,IAAOC,EAA0BD,EAA1BC,GAAGC,EAAuBF,EAAvBE,MAAMT,EAAiBO,EAAjBP,MAAiBO,EAAXxB,OACtB,OACC,8BACI,6BACI,+BACL,6BAAK0B,IAEN,8BACI,wBAAQd,QAAU,kBAtBjB,SAACa,GAEpB,IAAME,EAAYR,EAAQS,QAAO,SAACJ,GAAD,OAAYA,EAAOC,KAAOA,KAC3DI,QAAQC,IAAI,SACZV,EAAYO,GAkB4BI,CAAaN,IAAnC,iBAGC,oCACT,qBAAIJ,MAAO,CAACW,gBAAiBf,EAAOA,MAAOA,GAA3C,cAAqDA,EAArD,OAEe,kCAEU,cAAC,EAAD,SAMpB,6BAAKhB,QAnBKwB,cCtETQ,IAAMC,gBACOC,SCWlBC,MATf,WACE,OACE,mCACA,cAAC,EAAD,OCGWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a14a6bcc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState, useContext } from \"react\";\r\nimport { BsFillStarFill } from \"react-icons/bs\";\r\nimport { data } from \"./Reviews\";\r\n\r\nexport const Stars = (data) => {\r\n  const [ratings, setRatings] = useState(data.rating);\r\n  const [rate, setRate] = useState();\r\n\r\n  const [hover, setHover] = useState(false);\r\n\r\n      //I have to fix the onMouseEnter and onMouseLeave problems\r\n  \r\n  return (\r\n    <div>\r\n              {[...Array(5)].map((star, index, data) => {\r\n                    const ratingValue = index + 1;\r\n\r\n                    return (\r\n                          <label key={index}>\r\n            <input\r\n              type=\"radio\"\r\n              value={ratingValue}\r\n              onClick={() => setRatings(ratingValue)}\r\n              onMouseEnter={() => setHover(!hover)}\r\n              onMouseLeave={() => setHover(hover)}\r\n            />\r\n\r\n            <BsFillStarFill\r\n              className=\"star\"\r\n              size={70}\r\n              color={ratingValue <= ratings ? \"yellow\" : \"black\"}\r\n            />\r\n            {hover && <p>You have been rated</p>}\r\n          </label>\r\n        );\r\n      })}\r\n      <h4>{ratings}</h4>\r\n    </div>\r\n  );\r\n};\r\n","import React,{useState,useContext} from 'react'\r\nimport {BsFillStarFill}from 'react-icons/bs';\r\nimport {Stars} from './Stars';\r\n\r\nexport const data = [\r\n{\r\n    \"id\" : \"0175d1f0-a8c6-41bf-8d02-df5734d829a4\" ,\r\n    \"title\" : \"ocean at dusk\" ,\r\n\"color\" : \"#00c4e2\" ,\r\n\r\n\"rating\" : \"5\" ,\r\n},\r\n\r\n{\r\n \"id\" : \"83c7ba2f-7392-4d7d-9e23-35adbe186046\" ,\r\n    \"title\" : \"lawn\" ,\r\n\"color\" : \"#26ac56\" ,\r\n\r\n\"rating\" : \"3\" ,\r\n},\r\n\r\n{\r\n \"id\" : \"a11e3995-code-4d58-8c48-5e49ae7f7f23\" ,\r\n    \"title\" : \"bright green\" ,\r\n\"color\" : \"#22ca15\" ,\r\n\r\n\"rating\" : \"4\" ,\r\n\r\n\r\n},\r\n\r\n{\r\n \"id\" : \"a11e3995-bobd-4d58-8c48-5e49ae7f7f23\" ,\r\n    \"title\" : \"bright red\" ,\r\n\"color\" : \"#ff0000\" ,\r\n\r\n\"rating\" : \"0\" ,\r\n\r\n\r\n},\r\n\r\n\r\n]\r\n\r\n\r\n\r\nconst Reviews = () => {\r\n  \r\n  \r\n    \r\n   const[reviews,setReviews] = useState(data) \r\n   const[ratings,setRatings] = useState(data.rating)\r\n   const[color,setColor] = useState(data.color)\r\n   \r\n   \r\n\r\n  const handleRemove = (id) => {\r\n    \r\n    const newReview = reviews.filter((review) => review.id !== id)\r\n    console.log('hello')\r\n    setReviews( newReview)\r\n  }\r\n\r\n  \r\n    return (\r\n        <>\r\n         \r\n             <h1 style={{flex:1, alignItems:'center'}}>Ratings</h1>   \r\n           <div >\r\n            {reviews.map((review) => {\r\n               const {id,title,color,rating,} = review\r\n               return (\r\n                <div > \r\n                    <ul key={id}>\r\n                        <li>\r\n                   <h1>{title}</h1>\r\n                  \r\n                  <div> \r\n                      <button onClick ={()=>handleRemove(id)}>x</button>\r\n                  </div>\r\n                      \r\n                       <section > \r\n              <h2 style={{backgroundColor: color, color: color}}> {color} </h2>\r\n                             \r\n                             <section>\r\n                                 \r\n                                       <Stars />\r\n                                 </section>\r\n                             \r\n                             </section>\r\n                  \r\n            \r\n                   <h4>{ratings}</h4>\r\n                   </li>\r\n                       </ul>\r\n                     </div> \r\n                \r\n                    )\r\n            })}\r\n         </div>\r\n    \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Reviews","\r\nimport React,{useState,useContext}  from 'react';\r\n\r\nconst starContext = React.createContext()\r\nconst starProvider = starContext.Provider \r\n\r\nexport  {starProvider} ;","import logo from './logo.svg';\nimport './App.css';\nimport Reviews from './Components/Reviews';\nimport Statemanagement from './Components/Statemanagement';\nimport {starProvider} from './Components/Context' ; \n\nfunction App() {\n  return (\n    <>\n    <Reviews/>\n   \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}